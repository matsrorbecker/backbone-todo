// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.TodoItem = (function(superClass) {
    extend(TodoItem, superClass);

    function TodoItem() {
      this.updateText = bind(this.updateText, this);
      this.toggle = bind(this.toggle, this);
      return TodoItem.__super__.constructor.apply(this, arguments);
    }

    TodoItem.prototype.toggle = function() {
      return this.save({
        completed: !this.get('completed')
      });
    };

    TodoItem.prototype.updateText = function(text) {
      return this.set('val', text);
    };

    return TodoItem;

  })(Backbone.Model);

  window.TodoItems = (function(superClass) {
    extend(TodoItems, superClass);

    function TodoItems() {
      this.filterCompleted = bind(this.filterCompleted, this);
      this.removeElement = bind(this.removeElement, this);
      this.initialize = bind(this.initialize, this);
      return TodoItems.__super__.constructor.apply(this, arguments);
    }

    TodoItems.prototype.model = TodoItem;

    TodoItems.prototype.localStorage = new Store('backbone-todo');

    TodoItems.prototype.initialize = function() {
      return this.on('destroy', this.removeElement, this);
    };

    TodoItems.prototype.removeElement = function(model) {
      return this.remove(model);
    };

    TodoItems.prototype.filterCompleted = function() {
      return this.remove(this.filter(function(item) {
        return item.get('completed');
      }));
    };

    return TodoItems;

  })(Backbone.Collection);

}).call(this);

//# sourceMappingURL=models.js.map
