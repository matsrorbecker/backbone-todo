// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.TodoView = (function(superClass) {
    extend(TodoView, superClass);

    function TodoView() {
      this.render = bind(this.render, this);
      this.remove = bind(this.remove, this);
      this.update = bind(this.update, this);
      this.toggle = bind(this.toggle, this);
      this.initialize = bind(this.initialize, this);
      return TodoView.__super__.constructor.apply(this, arguments);
    }

    TodoView.prototype.initialize = function() {
      return this.model.on('change', this.render, this);
    };

    TodoView.prototype.events = {
      'change input[type=checkbox]': 'toggle',
      'change .form-control': 'update',
      'click .btn-danger': 'remove'
    };

    TodoView.prototype.toggle = function() {
      return this.model.toggle();
    };

    TodoView.prototype.update = function() {
      return this.model.updateText(this.$('.form-control').val());
    };

    TodoView.prototype.remove = function() {
      return this.model.destroy();
    };

    TodoView.prototype.template = _.template($("#item-template").html());

    TodoView.prototype.render = function() {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    };

    TodoView.prototype.className = 'input-group input-group-lg';

    return TodoView;

  })(Backbone.View);

  window.TodosView = (function(superClass) {
    extend(TodosView, superClass);

    function TodosView() {
      this.filterCompleted = bind(this.filterCompleted, this);
      this.render = bind(this.render, this);
      this.addAll = bind(this.addAll, this);
      this.addOne = bind(this.addOne, this);
      this.initialize = bind(this.initialize, this);
      return TodosView.__super__.constructor.apply(this, arguments);
    }

    TodosView.prototype.initialize = function() {
      this.collection.on('add', this.addOne, this);
      this.collection.on('reset', this.addAll, this);
      return this.collection.on('destroy', this.render, this);
    };

    TodosView.prototype.addOne = function(todoItem) {
      var todoView;
      todoView = new TodoView({
        model: todoItem
      });
      return this.$el.append(todoView.render().el);
    };

    TodosView.prototype.addAll = function() {
      this.$el.empty();
      return this.collection.forEach(this.addOne, this);
    };

    TodosView.prototype.render = function() {
      this.addAll();
      return this;
    };

    TodosView.prototype.filterCompleted = function() {
      this.collection.filterCompleted();
      return this.render();
    };

    return TodosView;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=views.js.map
